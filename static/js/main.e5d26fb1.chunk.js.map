{"version":3,"sources":["utils/index.js","components/Card.js","App.js","index.js"],"names":["CARDS","split","map","n","Number","value","suit","flat","isDescending","numbers","filter","number","index","length","moveCard","cards","movedCard","destinationCard","sourcePile","getCardPile","numToMove","cardPileIndex","allowCheat","isCheat","isEmpty","movingCards","slice","validOrder","m","card","pileIndex","c","includes","isNaN","findIndex","getCardIsActive","activeCard","isActive","sort","a","b","getCanCardMove","pile","bottom","useWindowEvent","event","callback","useEffect","window","addEventListener","removeEventListener","SUITS","Card","onMouseDown","onMouseUp","cursorState","shouldFollowCursor","isPressed","canMove","height","innerHeight","width","innerWidth","yOffset","Math","abs","r","spring","s","mouseX","mouseY","xPos","yPos","x","y","style","onPointerDown","bind","onPointerUp","data-index","data-pileindex","className","transform","zIndex","initialState","startX","startY","App","useState","setActiveCard","setCursorState","chunk","shuffle","i","setCards","e","pageX","pageY","topDeltaY","topDeltaX","pressedIndex","onCardRelease","clickedCard","diffX","diffY","getCardFromPoint","clientX","clientY","key","cardIndex","elementUnder","document","elementFromPoint","parentElement","dataIndex","dataset","emptyCard","pileindex","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e5d26fb1.chunk.js","sourcesContent":["import shuffle from 'lodash/shuffle'\nimport chunk from 'lodash/chunk'\nimport { useEffect } from 'react'\n\nconst CARDS = '987654321'\n  .split('')\n  .map(n => Number(n))\n  .map(n => [\n    { value: n, suit: 0 },\n    { value: n, suit: 1 },\n    { value: n, suit: 2 },\n    { value: n, suit: 3 },\n  ])\n  .flat()\n\nexport const shuffleDeck = () =>\n  chunk(shuffle(CARDS), 6)\n    .map((pile, pileIndex) =>\n      pile.map((n, i) => ({\n        ...n,\n        cardPileIndex: i,\n        pileIndex,\n      })),\n    )\n    .flat()\n    .map((c, i) => ({ ...c, index: i }))\n\nexport const isDescending = numbers => {\n  return (\n    numbers.filter((number, index) => {\n      return numbers[index + 1] ? number === numbers[index + 1] + 1 : true\n    }).length === numbers.length\n  )\n}\n\nexport const moveCard = (cards, movedCard, destinationCard) => {\n  const sourcePile = getCardPile(movedCard, cards)\n  const numToMove = sourcePile.length - movedCard.cardPileIndex\n  const allowCheat =\n    numToMove === 1 && !movedCard.isCheat && !destinationCard.isCheat\n  const isCheat =\n    movedCard.value !== destinationCard.value - 1 && !destinationCard.isEmpty\n\n  const movingCards = sourcePile.slice(\n    movedCard.cardPileIndex,\n    movedCard.cardPileIndex + numToMove,\n  )\n\n  const validOrder =\n    destinationCard.isEmpty ||\n    (!destinationCard.isCheat &&\n      isDescending([destinationCard.value, ...movingCards.map(m => m.value)]))\n\n  return cards.map(card => {\n    if (\n      card.pileIndex !== movedCard.pileIndex ||\n      movedCard.pileIndex === destinationCard.pileIndex\n    ) {\n      return card\n    }\n\n    if (!movingCards.map(c => c.index).includes(card.index)) {\n      return card\n    }\n\n    if (\n      (validOrder || allowCheat) &&\n      !Number.isNaN(destinationCard.pileIndex)\n    ) {\n      const cardPileIndex =\n        destinationCard.cardPileIndex +\n        movingCards.findIndex(c => c.index === card.index) +\n        1\n\n      return {\n        ...card,\n        pileIndex: destinationCard.pileIndex,\n        cardPileIndex,\n        isCheat,\n      }\n    }\n\n    return card\n  })\n}\n\nexport function getCardIsActive(activeCard, card) {\n  let isActive = false\n\n  if (activeCard) {\n    isActive =\n      activeCard.pileIndex === card.pileIndex &&\n      activeCard.cardPileIndex <= card.cardPileIndex\n  }\n\n  return isActive\n}\n\nexport const getCardPile = (card, cards) => {\n  const pile = cards.filter(c => c.pileIndex === card.pileIndex)\n  return pile.sort((a, b) => a.cardPileIndex - b.cardPileIndex)\n}\n\nexport const getCanCardMove = (card, cards) => {\n  const pile = getCardPile(card, cards)\n  const bottom = pile.map(c => c.value).slice(card.cardPileIndex, pile.length)\n  return isDescending(bottom)\n}\n\nexport const useWindowEvent = (event, callback) => {\n  useEffect(() => {\n    window.addEventListener(event, callback)\n    return () => window.removeEventListener(event, callback)\n  }, [event, callback])\n}\n","import React from 'react'\nimport { Motion, spring } from 'react-motion'\n\nconst SUITS = ['spades', 'clubs', 'hearts', 'diamonds']\n\nexport const Card = ({\n  card,\n  activeCard,\n  onMouseDown,\n  onMouseUp,\n  cursorState,\n}) => {\n  const shouldFollowCursor =\n    cursorState.isPressed && card.isActive && card.canMove\n\n  const height = window.innerHeight / 14\n  const width = window.innerWidth / 6.2\n  const yOffset = shouldFollowCursor\n    ? height * Math.abs(activeCard.cardPileIndex - card.cardPileIndex)\n    : 0\n  const r = spring(card.isCheat ? 22 : 0)\n  const s = spring(card.isActive ? 1.185 : 1)\n  const { mouseX, mouseY } = cursorState\n  const xPos = width / 4 + card.pileIndex * width\n  const yPos = height * 1.5 + card.cardPileIndex * height\n\n  const x = shouldFollowCursor ? mouseX : spring(xPos)\n  const y = shouldFollowCursor ? mouseY + yOffset : spring(yPos)\n\n  return (\n    <Motion style={{ x, y, r, s }}>\n      {({ x, y, r, s }) => (\n        <div\n          onPointerDown={onMouseDown.bind(null, card, x, y)}\n          onPointerUp={onMouseUp.bind(null, card, x, y)}\n          data-index={card.index}\n          data-pileindex={card.pileIndex || 0}\n          className={`card ${SUITS[card.suit]} rank${card.value} ${\n            shouldFollowCursor ? 'disable-touch' : ''\n          }`}\n          style={{\n            transform: `translate3d(${x}px, ${y}px, 0) rotate(${r}deg) scale(${s})`,\n            zIndex: shouldFollowCursor\n              ? 35 + card.cardPileIndex\n              : card.cardPileIndex,\n          }}\n        >\n          <div className=\"face\" />\n          {card.isEmpty && <div className=\"back\" />}\n        </div>\n      )}\n    </Motion>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  shuffleDeck,\n  useWindowEvent,\n  moveCard,\n  getCanCardMove,\n  getCardIsActive,\n  getCardPile,\n} from './utils'\nimport { Card } from './components/Card'\nimport './index.css'\n\nconst initialState = { startX: 0, startY: 0, mouseY: 0, mouseX: 0 }\n\nfunction App() {\n  const [activeCard, setActiveCard] = useState(null)\n  const [cursorState, setCursorState] = useState(initialState)\n  const [cards, setCards] = useState([...shuffleDeck()])\n\n  const onMouseDown = (card, mouseX, mouseY, e) => {\n    const { pageX: startX, pageY: startY } = e\n    if (activeCard) {\n      setCards(moveCard(cards, activeCard, card))\n      setActiveCard(null)\n    } else if (\n      card.isActive ||\n      !card.canMove ||\n      (!activeCard && card.isEmpty)\n    ) {\n      setActiveCard(null)\n    } else {\n      setActiveCard(card)\n    }\n\n    setCursorState({\n      topDeltaY: startY - mouseY,\n      topDeltaX: startX - mouseX,\n      mouseY,\n      mouseX,\n      startX,\n      startY,\n      isPressed: true,\n      pressedIndex: card.index,\n    })\n  }\n\n  const onMouseMove = ({ pageY, pageX }) => {\n    const { isPressed, topDeltaY, topDeltaX } = cursorState\n\n    if (isPressed) {\n      const mouseY = pageY - topDeltaY\n      const mouseX = pageX - topDeltaX\n\n      // TODO show preview of cheat rotation when hovering\n      // const card = getCardFromPoint(mouseX, mouseY, cards)\n      // if (card) {\n      //   console.log(card.value)\n      // }\n\n      setCursorState({ ...cursorState, mouseY, mouseX })\n    }\n  }\n\n  const onMouseUp = e => {\n    const diffX = Math.abs(cursorState.startX - e.pageX)\n    const diffY = Math.abs(cursorState.startY - e.pageY)\n    if (\n      activeCard &&\n      typeof cursorState.pressedIndex === 'number' &&\n      diffX < 10 &&\n      diffY < 10\n    ) {\n    } else {\n      setActiveCard(null)\n    }\n\n    setCursorState({\n      ...cursorState,\n      isPressed: false,\n      pressedIndex: null,\n      topDeltaY: 0,\n    })\n  }\n\n  const onCardRelease = (clickedCard, x, y, e) => {\n    const diffX = Math.abs(cursorState.startX - e.pageX)\n    const diffY = Math.abs(cursorState.startY - e.pageY)\n\n    if (\n      activeCard &&\n      typeof cursorState.pressedIndex === 'number' &&\n      (diffX > 10 || diffY > 10)\n    ) {\n      const clickedCard = getCardFromPoint(e.clientX, e.clientY, cards)\n\n      if (activeCard && clickedCard) {\n        setCards(moveCard(cards, activeCard, clickedCard))\n      }\n    }\n  }\n\n  useWindowEvent('pointerup', onMouseUp)\n  useWindowEvent('pointermove', onMouseMove)\n\n  return (\n    <div>\n      {[0, 1, 2, 3, 4, 5].map(n => (\n        <Card\n          key={`pile-${n}`}\n          card={{\n            cardPileIndex: -1,\n            pileIndex: n,\n            isEmpty: true,\n            canMove: true,\n          }}\n          onMouseUp={onCardRelease}\n          cursorState={cursorState}\n          onMouseDown={onMouseDown}\n        />\n      ))}\n\n      {cards.map((card, cardIndex) => (\n        <Card\n          key={`card-${cardIndex}`}\n          card={{\n            ...card,\n            isCheat: !!card.isCheat,\n            isActive: getCardIsActive(activeCard, card),\n            canMove: getCanCardMove(card, cards),\n            pileIndex: card.pileIndex,\n            cardPileIndex: card.cardPileIndex,\n          }}\n          activeCard={activeCard}\n          cursorState={cursorState}\n          onMouseUp={onCardRelease}\n          onMouseDown={onMouseDown}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n\nconst getCardFromPoint = (x, y, cards) => {\n  let card\n  const elementUnder = document.elementFromPoint(x, y)\n  if (elementUnder && elementUnder.parentElement) {\n    const dataIndex = elementUnder.parentElement.dataset.index\n    if (dataIndex) {\n      card = cards[+dataIndex]\n    } else {\n      let emptyCard = {\n        cardPileIndex: -1,\n        pileIndex: +elementUnder.parentElement.dataset.pileindex,\n        isEmpty: true,\n        canMove: true,\n      }\n      const pile = getCardPile(emptyCard, cards)\n      if (pile.length === 0) {\n        card = { ...emptyCard }\n      }\n    }\n  }\n  if (card && !card.isEmpty) {\n    const pile = getCardPile(card, cards)\n    card = pile[pile.length - 1]\n  }\n  return card\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}