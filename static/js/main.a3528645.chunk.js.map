{"version":3,"sources":["utils/index.js","components/Card.js","components/Header.js","App.js","index.js"],"names":["CARDS","split","map","n","value","Number","suit","flat","shuffleDeck","concat","chunk","shuffle","pile","pileIndex","i","cardPileIndex","c","index","isDescending","numbers","filter","number","length","moveCard","cards","movedCard","destinationCard","sourcePile","getCardPile","isFinished","numToMove","allowCheat","isCheat","isEmpty","movingCards","slice","validOrder","m","newCards","card","includes","isNaN","findIndex","finishedPiles","Object","values","groupBy","sort","a","b","join","getCardIsActive","activeCard","isActive","getBottomCard","decorateCard","getCanCardMove","bottom","useWindowEvent","event","callback","useEffect","window","addEventListener","removeEventListener","getCardFromPoint","x","y","elementUnder","document","elementFromPoint","parentElement","dataIndex","dataset","emptyCard","pileindex","getCardPosition","canMove","getCardSpacing","width","innerWidth","height","Math","min","max","innerHeight","yBuffer","SUITS","Card","onRest","mouseX","mouseY","isPressed","xPos","yPos","shouldFollowCursor","yOffset","abs","spring","r","s","zIndex","classes","style","classNames","transform","DisplayCard","data-index","data-pileindex","className","Header","onReset","hasWon","winRef","useRef","timer","useState","Date","now","startTime","setStartTime","seconds","minutes","hours","time","setTime","interval","setInterval","difference","floor","reset","clearTimeout","clearInterval","useTimer","current","alert","textAlign","toString","padStart","onClick","confirm","initialState","startX","startY","App","setActiveCard","cursorState","setCursorState","deltaRef","pressed","setPressed","setCards","setHasWon","uniq","debounce","setValue","useForceUpdate","pageX","pageY","diffX","diffY","passedThreshold","clickedCard","bottomCard","key","cardIndex","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a3528645.chunk.js","sourcesContent":["import shuffle from 'lodash/shuffle'\nimport chunk from 'lodash/chunk'\nimport { useEffect, useState } from 'react'\nimport groupBy from 'lodash/groupBy'\n\nconst VALUES = '987654321'\n\nconst CARDS = VALUES.split('')\n  .map(n => [\n    { value: Number(n), suit: 0 },\n    { value: Number(n), suit: 1 },\n    { value: Number(n), suit: 2 },\n    { value: Number(n), suit: 3 },\n  ])\n  .flat()\n\nexport const SORTED_CARDS = VALUES.split('')\n  .map(n => ({ value: Number(n), suit: 0 }))\n  .concat(VALUES.split('').map(n => ({ value: Number(n), suit: 1 })))\n\nexport const shuffleDeck = () =>\n  chunk(shuffle(CARDS), 6)\n    .map((pile, pileIndex) =>\n      pile.map((n, i) => ({\n        ...n,\n        cardPileIndex: i,\n        pileIndex,\n      })),\n    )\n    .flat()\n    .map((c, i) => ({ ...c, index: i }))\n\nexport const isDescending = numbers => {\n  return (\n    numbers.filter((number, index) => {\n      return numbers[index + 1] ? number === numbers[index + 1] + 1 : true\n    }).length === numbers.length\n  )\n}\n\nexport const moveCard = (cards, movedCard, destinationCard) => {\n  const sourcePile = getCardPile(movedCard, cards)\n  if (movedCard.isFinished || !destinationCard || destinationCard.isFinished) {\n    return cards\n  }\n\n  const numToMove = sourcePile.length - movedCard.cardPileIndex\n  const allowCheat =\n    numToMove === 1 && !movedCard.isCheat && !destinationCard.isCheat\n  const isCheat =\n    movedCard.value !== destinationCard.value - 1 && !destinationCard.isEmpty\n\n  const movingCards = sourcePile.slice(\n    movedCard.cardPileIndex,\n    movedCard.cardPileIndex + numToMove,\n  )\n\n  const validOrder =\n    destinationCard.isEmpty ||\n    (!destinationCard.isCheat &&\n      isDescending([destinationCard.value, ...movingCards.map(m => m.value)]))\n\n  const newCards = cards.map(card => {\n    if (\n      card.pileIndex !== movedCard.pileIndex ||\n      movedCard.pileIndex === destinationCard.pileIndex\n    ) {\n      return card\n    }\n\n    if (!movingCards.map(c => c.index).includes(card.index)) {\n      return card\n    }\n\n    if (\n      (validOrder || allowCheat) &&\n      !Number.isNaN(destinationCard.pileIndex)\n    ) {\n      const cardPileIndex =\n        destinationCard.cardPileIndex +\n        movingCards.findIndex(c => c.index === card.index) +\n        1\n\n      return {\n        ...card,\n        pileIndex: destinationCard.pileIndex,\n        cardPileIndex,\n        isCheat,\n      }\n    }\n\n    return card\n  })\n\n  const piles = Object.values(\n    groupBy(newCards, card => card.pileIndex),\n  ).map(pile => pile.sort((a, b) => a.cardPileIndex - b.cardPileIndex))\n\n  const finishedPiles = piles\n    .map(pile => ({\n      pile: pile.map(card => card.value).join(''),\n      index: pile[0].pileIndex,\n    }))\n    .filter(({ pile }) => pile === '987654321')\n    .map(pile => pile.index)\n\n  return newCards.map(c => ({\n    ...c,\n    isFinished: finishedPiles.includes(c.pileIndex),\n  }))\n}\n\nexport function getCardIsActive(activeCard, card) {\n  let isActive = false\n\n  if (activeCard) {\n    isActive =\n      activeCard.pileIndex === card.pileIndex &&\n      activeCard.cardPileIndex <= card.cardPileIndex\n  }\n\n  return isActive\n}\n\nexport const getCardPile = (card, cards) => {\n  const pile = cards.filter(c => c.pileIndex === card.pileIndex)\n  return pile.sort((a, b) => a.cardPileIndex - b.cardPileIndex)\n}\n\nexport const getBottomCard = (card, cards) => {\n  if (!card) {\n    return null\n  }\n\n  if (card.isEmpty) {\n    return card\n  }\n\n  const pile = getCardPile(card, cards)\n  card = pile[pile.length - 1]\n  return decorateCard(card, cards)\n}\n\nexport const getCanCardMove = (card, cards) => {\n  const pile = getCardPile(card, cards)\n  const bottom = pile.map(c => c.value).slice(card.cardPileIndex, pile.length)\n  return isDescending(bottom)\n}\n\nexport const useWindowEvent = (event, callback) => {\n  useEffect(() => {\n    window.addEventListener(event, callback)\n    return () => window.removeEventListener(event, callback)\n  }, [event, callback])\n}\n\nexport const getCardFromPoint = (x, y, cards) => {\n  let card\n  const elementUnder = document.elementFromPoint(x, y)\n\n  if (elementUnder && elementUnder.parentElement) {\n    const dataIndex = elementUnder.parentElement.dataset.index\n\n    if (dataIndex) {\n      card = cards[+dataIndex]\n    } else {\n      let emptyCard = {\n        cardPileIndex: -1,\n        pileIndex: +elementUnder.parentElement.dataset.pileindex,\n        isEmpty: true,\n      }\n      const pile = getCardPile(emptyCard, cards)\n\n      if (pile.length === 0) {\n        return { ...emptyCard, ...getCardPosition(emptyCard) }\n      }\n    }\n  }\n\n  return decorateCard(card, cards)\n}\n\nconst decorateCard = (card, cards) =>\n  card\n    ? {\n        ...card,\n        ...getCardPosition(card),\n        canMove: getCanCardMove(card, cards),\n        isActive: getCardIsActive(card, cards),\n      }\n    : null\n\nexport const useForceUpdate = () => {\n  const [, setValue] = useState(0)\n  return () => setValue(value => ++value)\n}\n\nexport const useTimer = () => {\n  const [startTime, setStartTime] = useState(Date.now())\n  const [time, setTime] = useState({ seconds: 0, minutes: 0, hours: 0 })\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const difference = Date.now() - startTime\n      setTime({\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n        reset: () => {\n          setStartTime(Date.now())\n          clearTimeout(interval)\n          setTime({ seconds: 0, minutes: 0, hours: 0 })\n        },\n      })\n    }, 1000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [startTime])\n\n  return time\n}\n\nexport const getCardSpacing = () => {\n  const width = window.innerWidth / 6.2\n  let height = Math.min(38, Math.max(window.innerHeight / 16, 25))\n  let yBuffer = height * 2\n\n  if (window.innerWidth > 1000) {\n    height = Math.min(50, Math.max(window.innerHeight / 16, 25))\n    yBuffer = height * 3\n  }\n\n  return { width, height, yBuffer }\n}\n\nexport const getCardPosition = card => {\n  const { width, height, yBuffer } = getCardSpacing()\n\n  const x = width / 4 + card.pileIndex * width\n  const y = card.isEmpty\n    ? yBuffer\n    : yBuffer + (card.isFinished ? 0 : card.cardPileIndex * height)\n\n  return { x, y }\n}\n","import React from 'react'\nimport { Motion, spring } from 'react-motion'\nimport { getCardPosition, getCardSpacing } from '../utils'\nconst SUITS = ['spades', 'clubs', 'hearts', 'diamonds']\n\nexport const Card = ({\n  card,\n  activeCard,\n  onRest = () => {},\n  mouseX = 0,\n  mouseY = 0,\n  isPressed,\n}) => {\n  const { height } = getCardSpacing()\n  const { x: xPos, y: yPos } = getCardPosition(card)\n\n  const shouldFollowCursor = card.isActive && isPressed\n\n  const yOffset = shouldFollowCursor\n    ? height * Math.abs(activeCard.cardPileIndex - card.cardPileIndex)\n    : 0\n\n  const x = shouldFollowCursor ? mouseX : spring(xPos)\n  const y = shouldFollowCursor ? mouseY + yOffset : spring(yPos)\n  const r = spring(card.isCheat ? 22 : 0)\n  const s = spring(card.isActive ? 1.185 : 1)\n  const zIndex = shouldFollowCursor\n    ? 35 + card.cardPileIndex\n    : card.cardPileIndex\n\n  const classes = [\n    'card',\n    card.isFinished ? 'is-finished' : `rank${card.value}`,\n    SUITS[card.suit],\n    card.canMove && 'can-move',\n    card.isActive && 'disable-touch',\n    card.isEmpty && 'empty',\n  ]\n\n  return (\n    <Motion style={{ x, y, r, s }} onRest={onRest}>\n      {({ x, y, r, s }) => (\n        <DisplayCard\n          card={card}\n          classNames={classes}\n          style={{\n            transform: `translate3d(${x}px, ${y}px, 0) rotate(${r}deg) scale(${s})`,\n            zIndex,\n          }}\n        />\n      )}\n    </Motion>\n  )\n}\n\nconst DisplayCard = ({ card, classNames = [], style = {} }) => {\n  const classes = [\n    'card',\n    ...classNames,\n    card.isFinished ? 'is-finished' : `rank${card.value}`,\n    SUITS[card.suit],\n  ]\n\n  return (\n    <div\n      data-index={card.index}\n      data-pileindex={card.pileIndex}\n      className={classes.join(' ')}\n      style={style}\n    >\n      <div className=\"face\" />\n      {card.isFinished && <div className=\"back\" />}\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useTimer } from '../utils'\nexport function Header({ onReset, hasWon }) {\n  const winRef = useRef(false)\n  const timer = useTimer()\n\n  useEffect(() => {\n    if (hasWon && !winRef.current) {\n      winRef.current = true\n      alert(\n        `You win! Your final time was ${timer.minutes} minutes, ${timer.seconds} seconds`,\n      )\n      timer.reset()\n      onReset()\n      winRef.current = false\n    }\n  }, [hasWon, onReset, timer])\n\n  return (\n    <>\n      <div style={{ width: 80 }}>\n        <span>Solitaire</span>\n      </div>\n\n      <div style={{ width: 80, textAlign: 'center' }}>\n        <span>\n          {`${timer.minutes.toString().padStart(2, '0') +\n            ':'}${timer.seconds.toString().padStart(2, '0')}`}\n        </span>\n      </div>\n\n      <div style={{ width: 80, textAlign: 'center' }}>\n        <span\n          onClick={() => {\n            const yes = window.confirm('Start a new game?')\n            if (yes) {\n              onReset()\n              timer.reset()\n            }\n          }}\n        >\n          +\n        </span>\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  shuffleDeck,\n  useWindowEvent,\n  moveCard,\n  getCanCardMove,\n  getCardIsActive,\n  getCardFromPoint,\n  useForceUpdate,\n  getBottomCard,\n} from './utils'\nimport { Card } from './components/Card'\nimport './index.css'\nimport debounce from 'lodash/debounce'\nimport uniq from 'lodash/uniq'\nimport { Header } from './components/Header'\n\nconst initialState = { startX: 0, startY: 0, mouseY: 0, mouseX: 0 }\n\nfunction App() {\n  const [activeCard, setActiveCard] = useState(null)\n  const [cursorState, setCursorState] = useState(initialState)\n  const deltaRef = useRef({ x: 0, y: 0 })\n  const [pressed, setPressed] = useState(false)\n  const [cards, setCards] = useState(shuffleDeck())\n  const [hasWon, setHasWon] = useState(false)\n\n  useEffect(() => {\n    const finished = uniq(cards.filter(c => c.isFinished).map(c => c.pileIndex))\n    if (finished.length >= 4 && !hasWon) {\n      setHasWon(true)\n    }\n  }, [cards, hasWon])\n\n  const onMouseDown = ({ pageX: startX, pageY: startY }) => {\n    setPressed(true)\n\n    let card = getCardFromPoint(startX, startY, cards)\n\n    if (!card) {\n      return setActiveCard(null)\n    }\n\n    if (activeCard) {\n      const bottomCard = getBottomCard(card, cards)\n      setCards(moveCard(cards, activeCard, bottomCard))\n      setActiveCard(null)\n    } else if (!card.isActive && card.canMove) {\n      setActiveCard(card)\n    }\n    const mouseY = card.y\n    const mouseX = card.x\n    deltaRef.current = { x: startX - card.x, y: startY - card.y }\n    setCursorState({ mouseX, mouseY, startX, startY })\n  }\n\n  const onMouseMove = ({ pageY, pageX }) => {\n    const mouseY = pageY - deltaRef.current.y\n    const mouseX = pageX - deltaRef.current.x\n    setCursorState({ ...cursorState, mouseY, mouseX })\n  }\n\n  const onMouseUp = ({ pageX, pageY }) => {\n    const diffX = Math.abs(cursorState.startX - pageX)\n    const diffY = Math.abs(cursorState.startY - pageY)\n    const passedThreshold = diffX > 40 || diffY > 40\n    setPressed(false)\n    if (activeCard) {\n      let clickedCard = getCardFromPoint(pageX, pageY, cards)\n      clickedCard = getBottomCard(clickedCard, cards)\n      if (clickedCard) {\n        setCards(moveCard(cards, activeCard, clickedCard))\n      }\n      if (passedThreshold) {\n        setActiveCard(null)\n      }\n    }\n  }\n\n  useWindowEvent('resize', debounce(useForceUpdate(), 500))\n  useWindowEvent('pointerup', onMouseUp)\n  useWindowEvent('pointerdown', onMouseDown)\n  useWindowEvent('pointermove', onMouseMove)\n\n  return (\n    <div className=\"container\">\n      <Header\n        hasWon={hasWon}\n        onReset={() => {\n          setCards(shuffleDeck())\n          setHasWon(false)\n        }}\n      />\n\n      {[0, 1, 2, 3, 4, 5].map(n => (\n        <Card\n          key={`pile-${n}`}\n          card={{\n            cardPileIndex: -1,\n            pileIndex: n,\n            isEmpty: true,\n          }}\n        />\n      ))}\n\n      {cards.map((card, cardIndex) => (\n        <Card\n          key={`card-${cardIndex}`}\n          card={{\n            ...card,\n            isActive: getCardIsActive(activeCard, card),\n            canMove: getCanCardMove(card, cards),\n          }}\n          activeCard={activeCard}\n          isPressed={pressed}\n          mouseX={cursorState.mouseX}\n          mouseY={cursorState.mouseY}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}