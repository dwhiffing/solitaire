{"version":3,"sources":["utils/index.js","components/Card.js","components/Header.js","App.js","index.js"],"names":["CARDS","split","map","n","value","Number","suit","flat","shuffleDeck","concat","chunk","shuffle","pile","pileIndex","i","cardPileIndex","c","index","isDescending","numbers","filter","number","length","moveCard","cards","movedCard","destinationCard","sourcePile","getCardPile","isFinished","numToMove","allowCheat","isCheat","isEmpty","movingCards","slice","validOrder","m","card","includes","isNaN","findIndex","getCardIsActive","activeCard","isActive","sort","a","b","getBottomCard","decorateCard","getCanCardMove","bottom","useWindowEvent","event","callback","useEffect","window","addEventListener","removeEventListener","getCardFromPoint","x","y","elementUnder","document","elementFromPoint","parentElement","dataIndex","dataset","emptyCard","pileindex","getCardPosition","canMove","useForceUpdate","useState","setValue","getCardSpacing","pileSize","outerWidth","clamp","documentElement","clientWidth","outerHeight","clientHeight","cardEl","querySelector","cardWidth","cardHeight","xBuffer","width","overSize","heightBase","maxHeight","height","yBuffer","leftoverSpace","SUITS","config","stiffness","damping","React","memo","onRest","mouseX","mouseY","debounce","xPos","yPos","yOffset","Math","abs","spring","r","s","zIndex","classes","style","data-index","data-pileindex","className","join","transform","position","top","left","Header","onReset","hasWon","winRef","useRef","timer","timeStopped","Date","now","hidden","timeGone","intervalRef","startTime","difference","state","setState","startTimer","current","setInterval","stopTimer","clearInterval","onVisibilityChange","minutes","floor","seconds","reset","useTimer","setTimeout","alert","textAlign","toString","padStart","onClick","confirm","initialState","EMPTY_CARDS","App","setActiveCard","cursorState","setCursorState","startRef","deltaRef","finishedPiles","setFinishedPiles","pressed","setPressed","setCards","setHasWon","newFinishedPiles","Object","values","groupBy","checkForFinishedPiles","clientX","clientY","diffX","diffY","passedThreshold","clickedCard","bottomCard","key","cardIndex","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.454fb95a.chunk.js","sourcesContent":["import shuffle from 'lodash/shuffle'\nimport chunk from 'lodash/chunk'\nimport clamp from 'lodash/clamp'\nimport { useEffect, useState, useRef } from 'react'\nimport groupBy from 'lodash/groupBy'\nimport onVisibilityChange from 'visibility-change-ponyfill'\n\nconst VALUES = '987654321'\n\nconst CARDS = VALUES.split('')\n  .map(n => [\n    { value: Number(n), suit: 0 },\n    { value: Number(n), suit: 1 },\n    { value: Number(n), suit: 2 },\n    { value: Number(n), suit: 3 },\n  ])\n  .flat()\n\nexport const SORTED_CARDS = VALUES.split('')\n  .map(n => ({ value: Number(n), suit: 0 }))\n  .concat(VALUES.split('').map(n => ({ value: Number(n), suit: 1 })))\n\nexport const shuffleDeck = () =>\n  chunk(shuffle(CARDS), 6)\n    .map((pile, pileIndex) =>\n      pile.map((n, i) => ({\n        ...n,\n        cardPileIndex: i,\n        pileIndex,\n      })),\n    )\n    .flat()\n    .map((c, i) => ({ ...c, index: i }))\n\nexport const isDescending = numbers => {\n  return (\n    numbers.filter((number, index) => {\n      return numbers[index + 1] ? number === numbers[index + 1] + 1 : true\n    }).length === numbers.length\n  )\n}\n\nexport const moveCard = (cards, movedCard, destinationCard) => {\n  const sourcePile = getCardPile(movedCard, cards)\n  if (movedCard.isFinished || !destinationCard || destinationCard.isFinished) {\n    return cards\n  }\n\n  const numToMove = sourcePile.length - movedCard.cardPileIndex\n  const allowCheat =\n    numToMove === 1 && !movedCard.isCheat && !destinationCard.isCheat\n  const isCheat =\n    movedCard.value !== destinationCard.value - 1 && !destinationCard.isEmpty\n\n  const movingCards = sourcePile.slice(\n    movedCard.cardPileIndex,\n    movedCard.cardPileIndex + numToMove,\n  )\n\n  const validOrder =\n    destinationCard.isEmpty ||\n    (!destinationCard.isCheat &&\n      isDescending([destinationCard.value, ...movingCards.map(m => m.value)]))\n\n  return cards.map(card => {\n    if (\n      card.pileIndex !== movedCard.pileIndex ||\n      movedCard.pileIndex === destinationCard.pileIndex\n    ) {\n      return card\n    }\n\n    if (!movingCards.map(c => c.index).includes(card.index)) {\n      return card\n    }\n\n    if (\n      (validOrder || allowCheat) &&\n      !Number.isNaN(destinationCard.pileIndex)\n    ) {\n      const cardPileIndex =\n        destinationCard.cardPileIndex +\n        movingCards.findIndex(c => c.index === card.index) +\n        1\n\n      return {\n        ...card,\n        pileIndex: destinationCard.pileIndex,\n        cardPileIndex,\n        isCheat,\n      }\n    }\n\n    return card\n  })\n}\n\nexport const checkForFinishedPiles = cards => {\n  const piles = Object.values(\n    groupBy(cards, card => card.pileIndex),\n  ).map(pile => pile.sort((a, b) => a.cardPileIndex - b.cardPileIndex))\n\n  return piles\n    .map(pile => ({\n      pile: pile.map(card => card.value).join(''),\n      index: pile[0].pileIndex,\n    }))\n    .filter(({ pile }) => pile === '987654321')\n    .map(pile => pile.index)\n}\n\nexport function getCardIsActive(activeCard, card) {\n  let isActive = false\n\n  if (activeCard) {\n    isActive =\n      activeCard.pileIndex === card.pileIndex &&\n      activeCard.cardPileIndex <= card.cardPileIndex\n  }\n\n  return isActive\n}\n\nexport const getCardPile = (card, cards) => {\n  const pile = cards.filter(c => c.pileIndex === card.pileIndex)\n  return pile.sort((a, b) => a.cardPileIndex - b.cardPileIndex)\n}\n\nexport const getBottomCard = (card, cards) => {\n  if (!card) {\n    return null\n  }\n\n  if (card.isEmpty) {\n    return card\n  }\n\n  const pile = getCardPile(card, cards)\n  card = pile[pile.length - 1]\n  return decorateCard(card, cards)\n}\n\nexport const getCanCardMove = (card, cards) => {\n  const pile = getCardPile(card, cards)\n  const bottom = pile.map(c => c.value).slice(card.cardPileIndex, pile.length)\n  return isDescending(bottom)\n}\n\nexport const useWindowEvent = (event, callback) => {\n  useEffect(() => {\n    window.addEventListener(event, callback)\n    return () => window.removeEventListener(event, callback)\n  }, [event, callback])\n}\n\nexport const useDocumentEvent = (event, callback) => {\n  useEffect(() => {\n    document.addEventListener(event, callback)\n    return () => document.removeEventListener(event, callback)\n  }, [event, callback])\n}\n\nexport const getCardFromPoint = (x, y, cards) => {\n  let card\n  const elementUnder = document.elementFromPoint(x, y)\n\n  if (elementUnder && elementUnder.parentElement) {\n    const dataIndex = elementUnder.parentElement.dataset.index\n\n    if (dataIndex) {\n      card = cards[+dataIndex]\n    } else {\n      let emptyCard = {\n        cardPileIndex: -1,\n        pileIndex: +elementUnder.parentElement.dataset.pileindex,\n        isEmpty: true,\n      }\n      const pile = getCardPile(emptyCard, cards)\n\n      if (pile.length === 0) {\n        return { ...emptyCard, ...getCardPosition(emptyCard) }\n      }\n    }\n  }\n\n  return decorateCard(card, cards)\n}\n\nconst decorateCard = (card, cards) =>\n  card\n    ? {\n        ...card,\n        ...getCardPosition(card, getCardPile(card, cards).length),\n        canMove: getCanCardMove(card, cards),\n        isActive: getCardIsActive(card, cards),\n      }\n    : null\n\nexport const useForceUpdate = () => {\n  const [, setValue] = useState(0)\n  return () => setValue(value => ++value)\n}\n\nexport const useTimer = () => {\n  const timeStopped = useRef(Date.now())\n  const hidden = useRef(true)\n  const timeGone = useRef(0)\n  const intervalRef = useRef()\n  const [state, setState] = useState({\n    startTime: Date.now(),\n    difference: 0,\n  })\n\n  const startTimer = () => {\n    if (!hidden.current) {\n      return\n    }\n\n    hidden.current = false\n    timeGone.current = timeGone.current + (Date.now() - timeStopped.current)\n\n    intervalRef.current = setInterval(() => {\n      setState(state => ({\n        ...state,\n        difference: Date.now() - state.startTime - timeGone.current,\n      }))\n    }, 100)\n  }\n\n  const stopTimer = () => {\n    timeStopped.current = Date.now()\n    hidden.current = true\n    clearInterval(intervalRef.current)\n  }\n\n  useEffect(() => {\n    startTimer()\n    onVisibilityChange(() => {\n      document.hidden ? stopTimer() : startTimer()\n    })\n    return stopTimer\n  }, [])\n\n  return {\n    minutes: Math.floor((state.difference / 1000 / 60) % 60),\n    seconds: Math.floor((state.difference / 1000) % 60),\n    reset: () => {\n      timeStopped.current = Date.now()\n      timeGone.current = 0\n\n      setState({\n        startTime: Date.now(),\n        difference: 0,\n      })\n    },\n  }\n}\n\nexport const getCardSpacing = (pileSize = 0) => {\n  const outerWidth = clamp(document.documentElement.clientWidth, 740)\n  const outerHeight = clamp(document.documentElement.clientHeight, 740)\n  const cardEl = document.querySelector('.card')\n  const cardWidth = cardEl.clientWidth\n  const cardHeight = cardEl.clientHeight\n  const xBuffer = (outerWidth - cardWidth * 6) / 7\n  const width = cardWidth + xBuffer\n  const overSize = outerHeight < 500 ? clamp(pileSize - 10, 0, 10) : 0\n  const heightBase = outerHeight / 15\n  const maxHeight = outerWidth > 450 ? 30 : 20\n\n  let height = clamp(heightBase - overSize, maxHeight)\n  let yBuffer = clamp(\n    (outerHeight - ((height + overSize) * 6.5 + cardHeight)) / 2,\n    40,\n    1000,\n  )\n\n  return { width, height, yBuffer, xBuffer }\n}\n\nexport const getCardPosition = (card, pileSize) => {\n  const { width, height, yBuffer, xBuffer } = getCardSpacing(pileSize)\n  const outerWidth = document.documentElement.clientWidth\n  const leftoverSpace = (outerWidth - (width * 6 - xBuffer)) / 2\n\n  const x = card.pileIndex * width + leftoverSpace\n  const y = card.isEmpty\n    ? yBuffer\n    : yBuffer + (card.isFinished ? 0 : card.cardPileIndex * height)\n\n  return { x, y }\n}\n","import React from 'react'\nimport { Motion, spring } from 'react-motion'\nimport {\n  getCardPosition,\n  getCardSpacing,\n  useWindowEvent,\n  useForceUpdate,\n} from '../utils'\nimport debounce from 'lodash/debounce'\nconst SUITS = ['spades', 'clubs', 'hearts', 'diamonds']\n\nconst config = { stiffness: 200, damping: 20 }\n\nconst Card = ({\n  card,\n  activeCard,\n  pileSize,\n  isActive,\n  isFinished,\n  canMove,\n  onRest = () => {},\n  mouseX = -1,\n  mouseY = -1,\n}) => {\n  useWindowEvent('resize', debounce(useForceUpdate(), 500))\n  const { height, xBuffer, width } = getCardSpacing(pileSize)\n  const { x: xPos, y: yPos } = getCardPosition(\n    { ...card, isFinished },\n    pileSize,\n  )\n\n  const yOffset =\n    mouseX > -1\n      ? height * Math.abs(activeCard.cardPileIndex - card.cardPileIndex)\n      : 0\n\n  const x = mouseX > -1 ? mouseX : spring(xPos, config)\n  const y = mouseY > -1 ? mouseY + yOffset : spring(yPos, config)\n  const r = spring(card.isCheat ? 17 : 0, config)\n  const s = spring(isActive ? 1.185 : 1, config)\n  const zIndex = isFinished\n    ? -1\n    : mouseX > -1\n    ? 35 + card.cardPileIndex\n    : card.cardPileIndex\n\n  const classes = [\n    'card',\n    `rank${card.value}`,\n    isFinished && 'finished',\n    canMove && 'can-move',\n    isActive && 'disable-touch',\n    card.isEmpty && 'empty',\n    SUITS[card.suit],\n  ]\n\n  return (\n    <Motion style={{ x, y, r, s }} onRest={onRest}>\n      {({ x, y, r, s }) => (\n        <div\n          data-index={card.index}\n          data-pileindex={card.pileIndex}\n          className={classes.join(' ')}\n          style={{\n            transform: `translate3d(${x}px, ${y}px, 0) rotate(${r}deg) scale(${s})`,\n            zIndex,\n          }}\n        >\n          <div className=\"face\" />\n          <div className=\"back\" />\n          <div\n            className=\"click\"\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: -xBuffer,\n              height: '160%',\n              width: width + xBuffer,\n            }}\n          />\n        </div>\n      )}\n    </Motion>\n  )\n}\n\nexport default React.memo(Card)\n","import React, { useEffect, useRef } from 'react'\nimport { useTimer } from '../utils'\n\nexport function Header({ onReset, hasWon }) {\n  const winRef = useRef(false)\n  const timer = useTimer()\n\n  useEffect(() => {\n    if (hasWon && !winRef.current) {\n      winRef.current = true\n      setTimeout(() => {\n        alert(\n          `You win! Your final time was ${timer.minutes} minutes, ${timer.seconds} seconds`,\n        )\n        timer.reset()\n        onReset()\n        winRef.current = false\n      }, 1000)\n    }\n  }, [hasWon, onReset, timer])\n\n  return (\n    <>\n      <div style={{ width: 80 }}>\n        <span>Solitaire</span>\n      </div>\n\n      <div style={{ width: 80, textAlign: 'center' }}>\n        <span>\n          {`${timer.minutes.toString().padStart(2, '0') +\n            ':'}${timer.seconds.toString().padStart(2, '0')}`}\n        </span>\n      </div>\n\n      <div style={{ width: 80, textAlign: 'center' }}>\n        <span\n          onClick={() => {\n            const yes = window.confirm('Start a new game?')\n            if (yes) {\n              onReset()\n              timer.reset()\n            }\n          }}\n        >\n          +\n        </span>\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  shuffleDeck,\n  useWindowEvent,\n  moveCard,\n  getCanCardMove,\n  getCardIsActive,\n  getCardFromPoint,\n  useForceUpdate,\n  getBottomCard,\n  checkForFinishedPiles,\n  getCardPile,\n} from './utils'\nimport Card from './components/Card'\nimport './index.css'\nimport debounce from 'lodash/debounce'\nimport { Header } from './components/Header'\n\nconst initialState = { mouseY: 0, mouseX: 0 }\nconst EMPTY_CARDS = [0, 1, 2, 3, 4, 5].map(n => ({\n  cardPileIndex: -1,\n  pileIndex: n,\n  isEmpty: true,\n}))\n\nfunction App() {\n  const [activeCard, setActiveCard] = useState(null)\n  const [cursorState, setCursorState] = useState(initialState)\n  const startRef = useRef({ x: 0, y: 0 })\n  const deltaRef = useRef({ x: 0, y: 0 })\n  const [finishedPiles, setFinishedPiles] = useState([])\n  const [pressed, setPressed] = useState(false)\n  const [cards, setCards] = useState(shuffleDeck())\n  const [hasWon, setHasWon] = useState(false)\n\n  useEffect(() => {\n    const newFinishedPiles = checkForFinishedPiles(cards)\n    if (!hasWon && newFinishedPiles.length !== finishedPiles.length) {\n      if (newFinishedPiles.length >= 4) {\n        setHasWon(true)\n      }\n      setTimeout(() => setFinishedPiles(newFinishedPiles), 500)\n    }\n  }, [cards, finishedPiles, hasWon])\n\n  const onMouseDown = ({ clientX, clientY }) => {\n    let card = getCardFromPoint(clientX, clientY, cards)\n\n    if (!card) {\n      return setActiveCard(null)\n    }\n\n    if (activeCard) {\n      const bottomCard = getBottomCard(card, cards)\n      setCards(moveCard(cards, activeCard, bottomCard))\n\n      setActiveCard(null)\n    } else if (!card.isActive && card.canMove) {\n      setActiveCard(card)\n    }\n    const mouseY = card.y\n    const mouseX = card.x\n    startRef.current = { x: clientX, y: clientY }\n    deltaRef.current = { x: clientX - card.x, y: clientY - card.y }\n    setPressed(true)\n\n    setCursorState({ mouseX, mouseY })\n  }\n\n  const onMouseMove = ({ clientY, clientX }) => {\n    const mouseY = clientY - deltaRef.current.y\n    const mouseX = clientX - deltaRef.current.x\n    setCursorState({ mouseY, mouseX })\n  }\n\n  const onMouseUp = ({ clientX, clientY }) => {\n    const diffX = Math.abs(startRef.current.x - clientX)\n    const diffY = Math.abs(startRef.current.y - clientY)\n    const passedThreshold = diffX > 15 || diffY > 15\n\n    deltaRef.current = { x: 0, y: 0 }\n    setPressed(false)\n\n    if (activeCard) {\n      let clickedCard = getCardFromPoint(clientX, clientY, cards)\n      clickedCard = getBottomCard(clickedCard, cards)\n      if (clickedCard) {\n        setCards(moveCard(cards, activeCard, clickedCard))\n      }\n      if (passedThreshold) {\n        setActiveCard(null)\n      }\n    }\n  }\n\n  useWindowEvent('resize', debounce(useForceUpdate(), 500))\n  useWindowEvent('pointerup', onMouseUp)\n  useWindowEvent('pointerdown', onMouseDown)\n  useWindowEvent('pointermove', onMouseMove)\n\n  return (\n    <div className=\"container\">\n      <Header\n        hasWon={hasWon}\n        onReset={() => {\n          setCards(shuffleDeck())\n          setHasWon(false)\n        }}\n      />\n\n      {[0, 1, 2, 3, 4, 5].map(n => (\n        <Card key={`pile-${n}`} card={EMPTY_CARDS[n]} />\n      ))}\n\n      {cards.map((card, cardIndex) => {\n        const isActive = getCardIsActive(activeCard, card)\n\n        return (\n          <Card\n            key={`card-${cardIndex}`}\n            card={card}\n            activeCard={activeCard}\n            isActive={isActive}\n            pileSize={getCardPile(card, cards).length}\n            canMove={getCanCardMove(card, cards)}\n            isFinished={finishedPiles.includes(card.pileIndex)}\n            mouseX={\n              getCardIsActive(activeCard, card) && pressed\n                ? cursorState.mouseX\n                : -1\n            }\n            mouseY={\n              getCardIsActive(activeCard, card) && pressed\n                ? cursorState.mouseY\n                : -1\n            }\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}